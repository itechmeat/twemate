{
  "name": "Answer to Replies",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "3ba5982b-7b97-4cae-9f16-48005600a03f",
        "options": {
          "rawBody": false
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "9ffdc54f-c545-4304-9776-5ce33213315f",
      "name": "Webhook",
      "webhookId": "3ba5982b-7b97-4cae-9f16-48005600a03f"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=## You're an author who wrote the tweet:\n\n{{ $json.main_tweet.display_text }}\n\n### Here the list of replys:\n\n{{ $json.replies.map(item => {\nreturn `**${item.author.name} (${item.author.username}):**\\n${item.display_text}\\n`\n}).join('\\n') }}\n\n### Your target reply:\n\n**{{ $json.replies.last().author.name }}**\n{{ $json.replies.last().display_text }}\n\n### Rules for your answer for the target reply:\n\n- This should only be a reply to the target comment, all other comments are just for context.\n- Your answer must be short, maximum number of characters is 280. This is a critical requirement.\n- Please answer in English only.\n- Form the sentence correctly, using the writing style of the original tweet that was responded to.\n\nDetermine the sentiment of the last reply to your tweet, it can be positive, neutral or negative.\nDetermine whether the last reply is a question.\n\nYour answer should be in the JSON format:\n{\n  \"tweet_id\": \"{{ $json.replies[0].id }}\",\n  \"tweet_text\": \"_target_reply_text\",\n  \"answer\": \"_your_answer_here_\",\n  \"is_question\": _define_it_,\n  \"sentiment\": \"_sentiment_\",\n}\n\nImportant:\n- Don't change the tweet_id field!",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        660,
        0
      ],
      "id": "e5272c08-4ab7-492c-a9d6-918cd231ecc1",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "executeOnce": false
    },
    {
      "parameters": {
        "model": "llama-3.1-8b-instant",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        640,
        280
      ],
      "id": "c6e4f8f0-5d78-4c78-b5fa-bdad9a60ee3b",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "p3AXWLB0yNiFR5gj",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "url": "=http://twimate-api:4750/api/tweets/{{ $json.body.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        220,
        0
      ],
      "id": "991d09c0-4f9e-4637-a825-44710ee38095",
      "name": "Get Tweet"
    },
    {
      "parameters": {
        "url": "=http://twimate-api:4750/api/tweets/replies/{{ $json.in_reply_to }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "until_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        0
      ],
      "id": "d53761f6-6039-4031-8265-cd835f539094",
      "name": "Get parent tweet with replies"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4e671b6e-069d-411b-955c-67d82eee69e9",
              "name": "output",
              "value": "={{ $json.output.parseJson() }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        0
      ],
      "id": "d05167e7-623e-40e3-adce-9257b53bf2f9",
      "name": "Parse JSON"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa8e1b7e-2817-443f-ad04-8253702ba11e",
              "leftValue": "={{ $json.output.tweet_id }}",
              "rightValue": "positive",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        380
      ],
      "id": "84b1e9f5-7919-425f-993e-ca6bbbfd8438",
      "name": "If tweet_id"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2bd2023e-7acf-486b-a8c8-4bb264a46fab",
              "leftValue": "={{ $json.output.sentiment }}",
              "rightValue": "positive",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1500,
        200
      ],
      "id": "ac35b5c4-8e86-4479-8eff-0df80b6beae7",
      "name": "If positive"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1760,
        360
      ],
      "id": "6908792d-c3ac-4892-bb37-ed520cc105d8",
      "name": "Wait 1s",
      "webhookId": "f4d82b29-3db4-41e3-b250-52b95fba9be9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://twimate-api:4750/api/tweets/favorite_tweet/{{ $json.output.tweet_id }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.output.answer }}"
            },
            {
              "name": "reply_to",
              "value": "={{ $json.output.tweet_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1820,
        160
      ],
      "id": "3b3c372c-f8ad-4162-aa87-02c5fd98eb26",
      "name": "Like triggered tweet"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://twimate-api:4750/api/tweets/new",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.output.answer }}"
            },
            {
              "name": "reply_to",
              "value": "={{ $json.output.tweet_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1980,
        380
      ],
      "id": "258b423b-4c52-479b-b1d9-0fb894e88ee2",
      "name": "Reply parent tweet"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2bd2023e-7acf-486b-a8c8-4bb264a46fab",
              "leftValue": "={{ $json.output.is_question }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "aa8e1b7e-2817-443f-ad04-8253702ba11e",
              "leftValue": "={{ $json.output.sentiment }}",
              "rightValue": "positive",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1520,
        380
      ],
      "id": "d7ef0224-91e1-4947-91ef-4e06f968bb93",
      "name": "If positive or question"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Parse JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Tweet": {
      "main": [
        [
          {
            "node": "Get parent tweet with replies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get parent tweet with replies": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON": {
      "main": [
        [
          {
            "node": "If tweet_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If tweet_id": {
      "main": [
        [
          {
            "node": "If positive or question",
            "type": "main",
            "index": 0
          },
          {
            "node": "If positive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If positive": {
      "main": [
        [
          {
            "node": "Like triggered tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 1s": {
      "main": [
        [
          {
            "node": "Reply parent tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If positive or question": {
      "main": [
        [
          {
            "node": "Wait 1s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "06d441e1-99af-4cc3-a5de-2a59fb96f450",
  "meta": {
    "instanceId": "1e05f1459943e6b9f633b709786c22d9a9613799a09976b4ea98545d3b0b413d"
  },
  "id": "p0p3mYjRErL4RZ48",
  "tags": []
}